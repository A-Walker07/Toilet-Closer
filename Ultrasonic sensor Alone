// Define the pins for the ultrasonic sensor
const int trigPin = 9; // Trigger pin
const int echoPin = 10; // Echo pin

// time waiting
const int timeWaitingIs = 5* 60 * 1000 // minutes, seconds, milliseconds

// Define the distance threshold in inches
const float distanceThreshold = 72.0; // 72 inches

// Speed of sound in cm/us
const float soundSpeed = 0.0343; 

// Conversion factor from cm to inches
const float cmToInches = 0.393701;

void setup() {
  // Initialize the serial communication for debugging
  Serial.begin(9600);

  // Set the trigPin as an output and echoPin as an input
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
}

void loop() {
  // Get the distance from the ultrasonic sensor
  float distance = getDistance();

  // Print the distance to the Serial Monitor
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" inches");

  // Check if the distance is within the threshold
  if (distance <= distanceThreshold) {
    Serial.println("Distance within 72 inches. Waiting for 5 minutes...");
    delay(300000); // Wait for 5 minutes (5 minutes = 300,000 milliseconds)
  } else {
    Serial.println("Distance out of range. Checking again...");
  }

  // Short delay before the next check
  delay(1000);
}

// Function to calculate the distance using the ultrasonic sensor
float getDistance() {
  // Clear the trigPin by setting it LOW
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);

  // Set the trigPin HIGH for 10 microseconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Read the echoPin and calculate the duration
  long duration = pulseIn(echoPin, HIGH);

  // Calculate the distance in cm
  float distanceCm = (duration * soundSpeed) / 2;

  // Convert the distance to inches
  return distanceCm * cmToInches;
}
